{"ast":null,"code":"'use strict';\n\nconst TransformStream = require('readable-stream').Transform;\n/*\n  Transforms a stream of {Name, Hash} objects to include size\n  of the DAG object.\n\n  Usage: inputStream.pipe(new FileResultStreamConverter())\n\n  Input object format:\n  {\n    Name: '/path/to/file/foo.txt',\n    Hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP'\n    Size: '20'\n  }\n\n  Output object format:\n  {\n    path: '/path/to/file/foo.txt',\n    hash: 'Qma4hjFTnCasJ8PVp3mZbZK5g2vGDT4LByLJ7m8ciyRFZP',\n    size: 20\n  }\n*/\n\n\nclass FileResultStreamConverter extends TransformStream {\n  constructor(options) {\n    const opts = Object.assign({}, options || {}, {\n      objectMode: true\n    });\n    super(opts);\n  }\n\n  _transform(obj, enc, callback) {\n    if (!obj.Hash) {\n      return callback();\n    }\n\n    callback(null, {\n      path: obj.Name,\n      hash: obj.Hash,\n      size: parseInt(obj.Size, 10)\n    });\n  }\n\n}\n\nmodule.exports = FileResultStreamConverter;","map":null,"metadata":{},"sourceType":"script"}