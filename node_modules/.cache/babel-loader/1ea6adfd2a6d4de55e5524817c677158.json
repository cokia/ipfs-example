{"ast":null,"code":"'use strict';\n\nconst cleanCID = require('../utils/clean-cid');\n\nconst TarStreamToObjects = require('../utils/tar-stream-to-objects');\n\nconst v = require('is-ipfs');\n\nconst through = require('through2');\n\nconst pull = require('pull-stream');\n\nconst toPull = require('stream-to-pull-stream');\n\nconst deferred = require('pull-defer');\n\nmodule.exports = send => {\n  return (path, opts) => {\n    opts = opts || {};\n    const p = deferred.source();\n\n    try {\n      path = cleanCID(path);\n    } catch (err) {\n      if (!v.ipfsPath(path)) {\n        return p.end(err);\n      }\n    }\n\n    const request = {\n      path: 'get',\n      args: path,\n      qs: opts // Convert the response stream to TarStream objects\n\n    };\n    send.andTransform(request, TarStreamToObjects, (err, stream) => {\n      if (err) {\n        return p.end(err);\n      }\n\n      const files = [];\n      stream.pipe(through.obj((file, enc, next) => {\n        if (file.content) {\n          files.push({\n            path: file.path,\n            content: toPull(file.content)\n          });\n        } else {\n          files.push(file);\n        }\n\n        next();\n      }, () => p.resolve(pull.values(files))));\n    });\n    return p;\n  };\n};","map":null,"metadata":{},"sourceType":"script"}