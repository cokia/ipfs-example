{"ast":null,"code":"'use strict';\n\nfunction requireCommands() {\n  const cmds = {\n    // Files (not MFS)\n    add: require('../files/add'),\n    addReadableStream: require('../files/add-readable-stream'),\n    addPullStream: require('../files/add-pull-stream'),\n    cat: require('../files/cat'),\n    catReadableStream: require('../files/cat-readable-stream'),\n    catPullStream: require('../files/cat-pull-stream'),\n    get: require('../files/get'),\n    getReadableStream: require('../files/get-readable-stream'),\n    getPullStream: require('../files/get-pull-stream'),\n    ls: require('../ls'),\n    lsReadableStream: require('../ls-readable-stream'),\n    lsPullStream: require('../ls-pull-stream'),\n    bitswap: require('../bitswap'),\n    block: require('../block'),\n    bootstrap: require('../bootstrap'),\n    commands: require('../commands'),\n    config: require('../config'),\n    dag: require('../dag'),\n    dht: require('../dht'),\n    diag: require('../diag'),\n    id: require('../id'),\n    key: require('../key'),\n    log: require('../log'),\n    mount: require('../mount'),\n    name: require('../name'),\n    object: require('../object'),\n    pin: require('../pin'),\n    ping: require('../ping'),\n    pingReadableStream: require('../ping-readable-stream'),\n    pingPullStream: require('../ping-pull-stream'),\n    refs: require('../refs'),\n    repo: require('../repo'),\n    stop: require('../stop'),\n    stats: require('../stats'),\n    swarm: require('../swarm'),\n    pubsub: require('../pubsub'),\n    update: require('../update'),\n    version: require('../version'),\n    types: require('../types'),\n    resolve: require('../resolve'),\n    dns: require('../dns') // shutdown is an alias for stop\n\n  };\n  cmds.shutdown = cmds.stop; // TODO: crowding the 'files' namespace temporarily for interface-ipfs-core\n  // compatibility, until 'files vs mfs' naming decision is resolved.\n\n  cmds.files = function (send) {\n    const files = require('../files')(send);\n\n    return files;\n  };\n\n  cmds.util = function (send, config) {\n    const util = {\n      addFromFs: require('../util/fs-add')(send),\n      addFromStream: require('../files/add')(send),\n      addFromURL: require('../util/url-add')(send),\n      getEndpointConfig: require('../util/get-endpoint-config')(config),\n      crypto: require('libp2p-crypto'),\n      isIPFS: require('is-ipfs')\n    };\n    return util;\n  };\n\n  return cmds;\n}\n\nfunction loadCommands(send, config) {\n  const files = requireCommands();\n  const cmds = {};\n  Object.keys(files).forEach(file => {\n    cmds[file] = files[file](send, config);\n  });\n  return cmds;\n}\n\nmodule.exports = loadCommands;","map":null,"metadata":{},"sourceType":"script"}