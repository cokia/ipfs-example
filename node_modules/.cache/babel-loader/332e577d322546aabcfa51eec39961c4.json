{"ast":null,"code":"'use strict';\n\nconst isNode = require('detect-node');\n\nconst promisify = require('promisify-es6');\n\nconst SendOneFile = require('../utils/send-one-file-multiple-results');\n\nconst FileResultStreamConverter = require('../utils/file-result-stream-converter');\n\nmodule.exports = send => {\n  const sendOneFile = SendOneFile(send, 'add');\n  return promisify((path, opts, callback) => {\n    if (typeof opts === 'function' && callback === undefined) {\n      callback = opts;\n      opts = {};\n    } // opts is the real callback --\n    // 'callback' is being injected by promisify\n\n\n    if (typeof opts === 'function' && typeof callback === 'function') {\n      callback = opts;\n      opts = {};\n    }\n\n    if (!isNode) {\n      return callback(new Error('fsAdd does not work in the browser'));\n    }\n\n    if (typeof path !== 'string') {\n      return callback(new Error('\"path\" must be a string'));\n    }\n\n    const requestOpts = {\n      qs: opts,\n      converter: FileResultStreamConverter\n    };\n    sendOneFile(path, requestOpts, callback);\n  });\n};","map":null,"metadata":{},"sourceType":"script"}