{"ast":null,"code":"'use strict';\n\nconst TransformStream = require('readable-stream').Transform;\n\nconst PubsubMessage = require('./pubsub-message-utils');\n\nclass PubsubMessageStream extends TransformStream {\n  constructor(options) {\n    const opts = Object.assign(options || {}, {\n      objectMode: true\n    });\n    super(opts);\n  }\n\n  static from(inputStream, callback) {\n    let outputStream = inputStream.pipe(new PubsubMessageStream());\n    inputStream.on('end', () => outputStream.emit('end'));\n    callback(null, outputStream);\n  }\n\n  _transform(obj, enc, callback) {\n    // go-ipfs returns '{}' as the very first object atm, we skip that\n    if (Object.keys(obj).length === 0) {\n      return callback();\n    }\n\n    try {\n      const msg = PubsubMessage.deserialize(obj, 'base64');\n      this.push(msg);\n      callback();\n    } catch (err) {\n      return callback(err);\n    }\n  }\n\n}\n\nmodule.exports = PubsubMessageStream;","map":null,"metadata":{},"sourceType":"script"}